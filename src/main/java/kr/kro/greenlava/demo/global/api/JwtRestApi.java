package kr.kro.greenlava.demo.global.api;

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import groovy.util.logging.Slf4j;
import io.jsonwebtoken.SignatureAlgorithm;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import kr.kro.greenlava.demo.global.constant.Constant;
import kr.kro.greenlava.demo.global.util.jwt.JwtProvider;

@Slf4j
@RestController
@RequestMapping("/v1/jwt")
@Tag(name = "jwt", description = "jwt 발급용 API")
public class JwtRestApi {
	private static Logger logger = LoggerFactory.getLogger(JwtRestApi.class);
	
	@Operation(summary = "get jwt token", description = "return jwt token generated by yml config")
	@GetMapping("token")
	public ResponseEntity<Map<String, Object>> getToken() throws Exception, RuntimeException {
		String token;
		Map<String, Object> body = new HashMap<>();
		
		token = JwtProvider.generateToken(1800, SignatureAlgorithm.HS256, Constant.JWT_KEY, Constant.JWT_SECRET);
		
		if(token == null || token.isEmpty()) throw new NullPointerException("생성된 토큰 정보가 없습니다.");
		
		body.put("token", token);
		
		logger.info("토큰 생성됨 : " + token);
		
		return ResponseEntity.ok().body(body);
	}

}
